var documenterSearchIndex = {"docs":
[{"location":"#PBRT.jl","page":"PBRT.jl","title":"PBRT.jl","text":"","category":"section"},{"location":"","page":"PBRT.jl","title":"PBRT.jl","text":"Documentation for PBRT.jl","category":"page"},{"location":"","page":"PBRT.jl","title":"PBRT.jl","text":"Modules = [PBRT]\nOrder = [:function, :type]","category":"page"},{"location":"#PBRT.at-Tuple{PBRT.ray, Float64}","page":"PBRT.jl","title":"PBRT.at","text":"at(r::ray, t::Float64)\n\nReturn the point at t along the ray r. Using the formula \n\n\n\n\n\n","category":"method"},{"location":"#PBRT.foo-Tuple{}","page":"PBRT.jl","title":"PBRT.foo","text":"foo()\n\nReturn a greeting message.\n\n\n\n\n\n","category":"method"},{"location":"#PBRT.hit!-Tuple{PBRT.hittable_list, PBRT.ray, Float64, Float64, PBRT.hit_record}","page":"PBRT.jl","title":"PBRT.hit!","text":"hit!(list::hittable_list, r::ray, t_min::Float64, t_max::Float64, rec::hit_record)\n\nCheck if the ray r hits any object in the list of objects list.\n\nIf it does then the hit record rec is updated with the hit information. If the ray then hits an object closer to the camera than the previous hit,  then the hit record rec is updated with the new hit information.\n\n\n\n\n\n","category":"method"},{"location":"#PBRT.hit!-Tuple{PBRT.ray, PBRT.interval}","page":"PBRT.jl","title":"PBRT.hit!","text":"hit!(r::ray, a::aabb, t::interval)::Bool\n\nCheck if a ray intersects an axis-aligned bounding box. Function uses formula \n\ntextbf t = fracr(t) - textbf omathbf d\n\n\n\n\n\n","category":"method"},{"location":"#PBRT.refract-Tuple{Vector{Float64}, Vector{Float64}, Any}","page":"PBRT.jl","title":"PBRT.refract","text":"refract(uv::Vector{Float64}, n::Vector{Float64}, r::Float64)::Vector{Float64}\n\nRefract a vector uv through a normal n with a refractive index r. Uses Snell's Law to calculate the refracted vector.\n\n\n\n\n\n","category":"method"},{"location":"#PBRT.scatter-Tuple{PBRT.metal, PBRT.ray, PBRT.hit_record, PBRT.scatter_data}","page":"PBRT.jl","title":"PBRT.scatter","text":"scatter(mat::metal, r_in::ray, rec::hit_record, sd::scatter_data)::Bool\n\nScatter a metal material. Returns true if the ray is scattered, false otherwise.\n\n\n\n\n\n","category":"method"}]
}
