        - import Base.push!
        - 
        - mutable struct hittable_list 
        -     objects::Vector{hittable}
        -     bbox::aabb
        -     function hittable_list()
        -         objects::Vector{hittable} = [] 
        -         bbox::aabb = aabb()
        -         new(objects, bbox)
        -     end
        -     function hittable_list(objects, bbox)
        -         new(objects, bbox)
        -     end
        - end
        - 
        - function push!(list::hittable_list, object::hittable)
    38304     push!(list.objects, object)
    61312     list.bbox = aabb(list.bbox, object.bbox)
        - end
        - 
        - function clear!(list::hittable_list)
        -     list.objects = []
        - end
        - 
        - function hit!(list::hittable_list, r::ray, ray_t::interval, rec::hit_record)
        0     temp_rec = hit_record()
        -     hit_anything = false
        0     closest_so_far = ray_t.hi
        0     for object in list.objects
232797184         if(hit!(object, r, interval(ray_t.lo, closest_so_far), temp_rec))
        -             hit_anything = true
        0             closest_so_far = temp_rec.t
        - 
        0             rec.front_face = temp_rec.front_face
        0             rec.normal = temp_rec.normal
        0             rec.mat = temp_rec.mat
        0             rec.p = temp_rec.p
        0             rec.t = temp_rec.t
        -         end
        0     end
        - 
        0     return hit_anything
        - end
