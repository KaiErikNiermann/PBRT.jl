@Manual{bun_ffi_api,
  title = {Bun FFI API Documentation},
  note  = {Accessed: 2024-11-09},
  url   = {https://bun.sh/docs/api/ffi},
}

@Misc{Akbary2023wasienv,
  author = {Akbary, Syrus and McCaskey, Mark and Kruth, James and Turner, Aaron and Noa and Desiatov, Max and Enderlin, Ivan and van Emden, Robin and Allmaras, Moritz},
  month  = {6},
  title  = {wasienv/wasienv},
  year   = {2023},
  date   = {2023-06-06},
  day    = {6},
  url    = {https://github.com/wasienv/wasienv},
}

@Misc{Ayke2024tinygo,
  author = {Ayke and Evans, Ron and Gryski, Damian and sago35 and Nia and dkegel-fastly and kenbell and de Andrade, Elliott Sales and ardnew and Soldak, Yurii and Huber, Yannis and BCG and Reddig, Randy and Schwindt, Federico G. and Whittingslow, Patricio and Naur, Elias and leongross and Clift, Justin and Esteban, Daniel and Agrawal, Anuraag (Rag) and Fauchon, Olivier and Brauer, Björn and Siudzinski, Wojtek and Zakharkin, Dmitriy and Teske, Lucas and Brandhorst-Satzkorn, Johan and Achille and Reesor, Ethan and Feldman, Scott and Yegupov, Konstantin},
  month  = {11},
  title  = {tinygo-org/tinygo},
  year   = {2024},
  date   = {2024-11-14},
  day    = {14},
  url    = {https://github.com/tinygo-org/tinygo},
}

@Manual{dartCInterop,
  title  = {C interop using dart:ffi},
  author = {The Dart Team},
  date   = {2024},
  url    = {https://dart.dev/interop/c-interop},
}

@Manual{crubit,
  title  = {Crubit: C++/Rust Bidirectional Interop Tool},
  author = {Google},
  note   = {GitHub repository},
  date   = {2024},
  url    = {https://github.com/google/crubit},
}

@Manual{cxx,
  title  = {CXX - Safe Interoperability Between Rust and C++},
  author = {Google and Contributors},
  note   = {Project documentation},
  date   = {2024},
  url    = {https://cxx.rs/},
}

@Manual{javacpp,
  title  = {JavaCPP - The missing bridge between Java and native C++},
  author = {Samuel Audet and Contributors},
  note   = {GitHub repository},
  date   = {2024},
  url    = {https://github.com/bytedeco/javacpp},
}

@Misc{Jakob2024pybind,
  author = {Jakob, Wenzel and Schreiner, Henry and Rhinelander, Jason and Moldovan, Dean and Smirnov, Ivan and Gokaslan, Aaron and pre-commit-ci[bot] and dependabot[bot] and Jadoul, Yannick and Huebl, Axel and Staletic, Boris and Izmailov, Sergei and Cousineau, Eric and Merry, Bruce and Spicuzza, Dustin and Corlay, Sylvain and Lee, Antony and Burns, Lori A. and Dan and Lyskov, Sergey and Houliston, Trent and bennorth and Carlstrom, Michael and jbarlow and Steinberg, Ethan and Pritchard, Benjamin and Leavitt, Laramie and Haschke, Robert and luzpaz and Mabille, Johan},
  month  = {11},
  title  = {pybind/pybind11},
  year   = {2024},
  date   = {2024-11-14},
  day    = {14},
  url    = {https://github.com/pybind/pybind11},
}

@Misc{Shajii2024exaloop,
  author = {Shajii, A. R. and Numanagić, Ibrahim and Numanagić, Ishak and dependabot[bot] and Henderson, Mark and McKee, Kurt and Berry, Stephen and Smajlović, Haris and Ashimine, Ikko Eltociear and Soref, Josh and Kaelbling, Philip and Farley, Sean and learnforpractice and zstadler},
  month  = {11},
  title  = {exaloop/codon},
  year   = {2024},
  date   = {2024-11-13},
  day    = {13},
  url    = {https://github.com/exaloop/codon},
}

@Misc{Simon2024oracle,
  author = {Simon, Douglas and Humer, Christian and Eisl, Josef and Duboscq, Gilles and Schatz, Roland and Peterssen, Alfonso² and Wuerthinger, Thomas and Spasojevic, Boris and Ansaloni, Danilo and Zezula, Tomáš and Woegerer, Paul and Woess, Andreas and Rodriguez, Tom and Stadler, Lukas and Haeubl, Christian and Prokopec, Aleksandar and Gregersen, Allan and Garcia, Thomas and Hofer, Peter and OracleLabsAutomation and Daloze, Benoit and Leopoldseder, David and Stancu, Codrut and Gupalo, Olga and Zheng, Yudi and Niephaus, Fabio and Entlicher, Martin and Li, Paley and Maršík, Jirka and Urban-Forster, Bernhard},
  month  = {11},
  title  = {oracle/graal},
  year   = {2024},
  date   = {2024-11-15},
  day    = {15},
  url    = {https://github.com/oracle/graal},
}

@Misc{WebAssemblyComponentModel,
  author       = {{Bytecode Alliance}},
  howpublished = {\url{https://component-model.bytecodealliance.org/}},
  note         = {Accessed: 2024-11-15},
  title        = {The WebAssembly Component Model},
  abstract     = {The WebAssembly Component Model provides an architecture for creating interoperable Wasm libraries, applications, and environments. Aimed at developers of Wasm libraries and applications, this guide covers component-based development and usage for languages such as C, C++, Rust, Python, Go, and JavaScript. The model supports a stable WASI 0.2.0 release, allowing users to target consistent WIT definitions and contribute via GitHub.},
  date         = {2024},
  url          = {https://component-model.bytecodealliance.org/},
}

@Misc{Gohman2024WebAssembly,
  author = {Gohman, Dan and Crichton, Alex and Brown, Andrew and Clegg, Sam and Takashi, YAMAMOTO and Shao, Cheng and Dice, Joel and Luo, Yonggang and Agrawal, Anuraag (Rag) and Schneidereit, Till and Hommey, Mike and A., Greg. and Hickey, Pat and Foltzer, Adam C. and Cannon, Brett and Catherine and Vukicevic, Vladimir and Delendik, Yury and McCormick, Matt and Lill, Michael and Floros, Orestis and Rying, Philip and Kolesnikov, Roman and Lopopolo, Ryan and Rubanov, Sergey and SingleAccretion and Manuel, Steve and Nepogodin, Vladislav and Saito, Yuta and liang.he},
  month  = {10},
  title  = {WebAssembly/wasi-sdk},
  year   = {2024},
  date   = {2024-10-29},
  day    = {29},
  url    = {https://github.com/WebAssembly/wasi-sdk},
}

@Misc{wasmtime_intro,
  author = {{Bytecode Alliance}},
  note   = {Wasmtime is a standalone runtime for WebAssembly, WASI, and the Component Model. It is designed to be fast, secure, configurable, and standards compliant, and can run WebAssembly outside of the web environment.},
  title  = {Wasmtime Documentation},
  date   = {2024},
  url    = {https://github.com/bytecodealliance/wasmtime},
}

@Misc{wasix,
  author = {{SingleStore Labs}},
  note   = {Provides stubs for POSIX compatibility in WASI builds, facilitating the compilation of sources expecting POSIX support. Designed for experimental use.},
  title  = {WASIX: POSIX Compatibility Layer for WASI Builds},
  date   = {2024},
  url    = {https://github.com/singlestore-labs/wasix},
}

@Misc{cargo-wasi,
  author = {{Bytecode Alliance}},
  note   = {Provides tools for building, running, testing, and benchmarking Rust code for the wasm32-wasi target. Licensed under Apache-2.0 with LLVM exception.},
  title  = {cargo-wasi: A Lightweight Cargo Subcommand for the wasm32-wasi Target},
  date   = {2024},
  url    = {https://github.com/bytecodealliance/cargo-wasi},
}
